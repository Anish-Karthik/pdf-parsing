{
    "questions": [
        {
            "question": "**Premise 1:** (A \u2192 B) \u2227 \u00acC\n**Premise 2:** C \u2228 (\u00acB \u2227 A)\n\n**Question:** Do these premises form a contradiction? If so, explain why. If not, provide a truth table scenario where both premises are true.",
            "difficulty": "medium",
            "reasoning": "Let's analyze the premises using a truth table to determine if they present a contradiction.\n\n| A | B | C | A \u2192 B | \u00acC | (A \u2192 B) \u2227 \u00acC | \u00acB | \u00acB \u2227 A | C \u2228 (\u00acB \u2227 A) | \n|---|---|---|---|---|---|---|---|---| \n| T | T | T | T | F | F | F | F | T |\n| T | T | F | T | T | T | F | F | F |\n| T | F | T | F | F | F | T | T | T |\n| T | F | F | F | T | F | T | T | T |\n| F | T | T | T | F | F | F | F | T |\n| F | T | F | T | T | T | F | F | F |\n| F | F | T | T | F | F | T | F | T |\n| F | F | F | T | T | T | T | F | F |\n\n**Analysis:**\n\nA contradiction occurs when both premises cannot be true simultaneously. Looking at our truth table, we can see that there's no scenario where both (A \u2192 B) \u2227 \u00acC and C \u2228 (\u00acB \u2227 A) are simultaneously true.\n\n**Explanation:** \n\n- When C is true, Premise 2 is always true, but Premise 1 is always false (because of \u00acC). \n- When C is false, for Premise 1 to be true, A \u2192 B must be true.  However, if A is true and B is false while C is false, Premise 2 becomes true, creating a conflict.\n\n**Conclusion:**\n\nTherefore, the premises form a contradiction.",
            "options": [
                "No",
                "Yes",
                "False",
                "True"
            ],
            "correct_option": "B"
        },
        {
            "question": "Imagine you're designing a simple search engine. Users can input keywords using 'AND' or 'OR'.  \n\n**Premise:** A user searches for documents containing 'JavaScript' AND ('Python' OR 'Java'). \n\n**Task:** Construct a truth table where 'p' represents the presence of 'JavaScript', 'q' represents 'Python', and 'r' represents 'Java'. Determine which combinations of keywords within a document would satisfy the user's search.\n\n**Difficulty Level:** Medium (5/10)",
            "difficulty": "medium",
            "reasoning": "## Reasoning:\n\n1. **Understanding the Search:** The user wants documents containing 'JavaScript' and at least one of the following: 'Python' or 'Java'.\n\n2. **Defining Propositions:**\n   - p: Document contains 'JavaScript'\n   - q: Document contains 'Python'\n   - r: Document contains 'Java'\n\n3. **Building the Truth Table:**\n\n| p | q | r | p AND (q OR r) |\n|---|---|---|----------------|\n| T | T | T |      T          |\n| T | T | F |      T          |\n| T | F | T |      T          |\n| T | F | F |      F          |\n| F | T | T |      F          |\n| F | T | F |      F          |\n| F | F | T |      F          |\n| F | F | F |      F          |\n\n4. **Analyzing the Results:** The truth table shows the search is satisfied (True) in three cases:\n   - Document contains JavaScript, Python, and Java.\n   - Document contains JavaScript and Python, but not Java.\n   - Document contains JavaScript and Java, but not Python.\n\n**Therefore, the combinations (p=T, q=T, r=T), (p=T, q=T, r=F), and (p=T, q=F, r=T) would satisfy the search.**",
            "options": [
                "2",
                "3",
                "4",
                "5"
            ],
            "correct_option": "C"
        },
        {
            "question": "**premise**: Consider the statement: 'It is not the case that both the train is delayed and the bus is on time.'\n**instruction**: Apply De Morgan's Law to rewrite this statement in a logically equivalent form and then construct a truth table for the original statement to verify the equivalence.\n**example**: \n  **statement**: It is not true that (A and B)\n  **De Morgan's Law**: (Not A) or (Not B)\n",
            "difficulty": "medium",
            "reasoning": "Let's break down this problem step-by-step:\n\n**1. Applying De Morgan's Law:**\n\n* Our original statement has the form 'Not (A and B)' where:\n    * A: 'The train is delayed'\n    * B: 'The bus is on time'\n* De Morgan's Law tells us 'Not (A and B)' is equivalent to '(Not A) or (Not B)'.\n* Applying this, our rewritten statement is: 'The train is not delayed or the bus is not on time.'\n\n**2. Constructing the Truth Table:**\n\nWe need to consider all possible truth values for A (train delayed) and B (bus on time). \n\n| A (Train Delayed) | B (Bus On Time) | A and B | Not (A and B) | Not A | Not B | (Not A) or (Not B) |\n|---|---|---|---|---|---|---| \n| True | True | True | **False** | False | False | **False** |\n| True | False | False | **True** | False | True | **True** |\n| False | True | False | **True** | True | False | **True** |\n| False | False | False | **True** | True | True | **True** |\n\n**3. Verifying Equivalence:**\n\nThe columns for 'Not (A and B)' and '(Not A) or (Not B)' are identical. This confirms that our application of De Morgan's Law produced a logically equivalent statement. ",
            "options": [
                "False",
                "True",
                "Not Applicable",
                "None"
            ],
            "correct_option": "A"
        },
        {
            "question": "Consider the statement: 'A polygon is a quadrilateral if and only if it has exactly four sides'. Construct a truth table for this statement.  What can you say about the truth value of the statement based on its truth table?",
            "difficulty": "medium",
            "reasoning": "Let's break down this problem step-by-step:\n\n**1. Understanding the Biconditional:**\n\nThe statement uses 'if and only if', which signifies a biconditional. A biconditional statement is true under these conditions ONLY:\n* **Both parts are true:**  If a polygon is a quadrilateral, it has four sides, AND if it has four sides, it's a quadrilateral.\n* **Both parts are false:** If a polygon isn't a quadrilateral, it doesn't have four sides, AND if it doesn't have four sides, it's not a quadrilateral.\n\n**2. Constructing the Truth Table:**\n\nLet:\n* **p** represent 'A polygon is a quadrilateral'\n* **q** represent 'A polygon has exactly four sides'\n\nOur truth table looks like this:\n\n| p | q | p \u2194 q |\n|---|---|-------|\n| T | T |  T    |\n| T | F |  F    |\n| F | T |  F    |\n| F | F |  T    |\n\n**3. Analyzing the Truth Values:**\n\nThe truth table shows the biconditional statement is true in two cases (where p and q have the same truth value) and false in the other two (where p and q have different truth values).  \n\n**Answer:** The statement is true only when the truth values of 'A polygon is a quadrilateral' and 'A polygon has exactly four sides' are the same, either both true or both false.",
            "options": [
                "Sometimes true",
                "Always true",
                "Always false",
                "Sometimes false"
            ],
            "correct_option": "A"
        },
        {
            "question": "**argument**: No birds are mammals. Some mammals are pets. Therefore, some pets are not birds.\n**task**: Construct a truth table for the given argument. Determine if the argument is valid or invalid, and clearly explain your reasoning.\n**difficulty**: Medium 5/10\n",
            "difficulty": "medium",
            "reasoning": "This question falls under the topic of 'Truth Tables for Syllogistic Arguments' as it requires understanding and application of truth table construction specifically for syllogistic arguments, a fundamental concept within 'Logical Reasoning - Truth Tables'.\n\nHere's a breakdown of the solution:\n\n1. **Define Propositions:**\n    * Let 'B' represent 'being a bird'.\n    * Let 'M' represent 'being a mammal'.\n    * Let 'P' represent 'being a pet'.\n\n2. **Symbolic Form:**\n    * Premise 1: No birds are mammals:  ~B -> M \n    * Premise 2: Some mammals are pets:  M & P\n    * Conclusion: Some pets are not birds: P & ~B\n\n3. **Truth Table Construction:**\n\n| B | M | P | ~B | ~B -> M | M & P | P & ~B |\n|---|---|---|----|---------|-------|--------|\n| T | T | T | F  | T       | T     | F      |\n| T | T | F | F  | T       | F     | F      |\n| T | F | T | F  | T       | F     | F      |\n| T | F | F | F  | T       | F     | F      |\n| F | T | T | T  | T       | T     | T      |\n| F | T | F | T  | T       | F     | F      |\n| F | F | T | T  | F       | F     | T      |\n| F | F | F | T  | F       | F     | F      |\n\n4. **Validity Analysis:**\n   * An argument is valid if and only if whenever all premises are true, the conclusion is also true.  In the truth table, we look for rows where both premises (~B -> M and M & P) are true. This occurs in the 5th row. \n   * In the 5th row,  the conclusion (P & ~B) is also true. \n   * **Therefore, the argument is valid.** \n\n**Reasoning Summary:**\nThe truth table demonstrates that there is no scenario where both premises are true and the conclusion is false.  This confirms the argument's validity - the conclusion logically follows from the premises.",
            "options": [
                "Invalid",
                "Valid",
                "Indeterminate",
                "Contradictory"
            ],
            "correct_option": "B"
        },
        {
            "question": "Construct a truth table for the following statement: \"The sky is blue and the birds are singing, or it is nighttime.\"",
            "difficulty": "medium",
            "reasoning": "## Reasoning:\n\nThis question falls under 'Constructing Truth Tables for Simple Propositions' as it requires understanding of logical connectives and their truth values to build a complete truth table. It's categorized as 'medium' difficulty due to:\n\n1. **Multiple Propositions:** It involves three simple propositions:\n    - p: The sky is blue\n    - q: The birds are singing\n    - r: It is nighttime\n2. **Combined Connectives:** It uses both 'and' (conjunction) and 'or' (disjunction), demanding understanding of their order of operations.\n\n**Step-by-step Solution:**\n\n1. **Identify Propositions and Connectives:**  We've already done this above (p, q, r and 'and', 'or').\n\n2. **Truth Table Structure:**\n   We have three propositions, meaning 2^3 = 8 possible combinations of truth values. Our table will have columns for:\n    - p\n    - q\n    - r\n    - p and q (representing the conjunction)\n    - (p and q) or r (the final statement)\n\n3. **Populate the Table:**\n\n| p | q | r | p and q | (p and q) or r |\n|---|---|---|---|---|\n| T | T | T |  T  |      T        |\n| T | T | F |  T  |      T        |\n| T | F | T |  F  |      T        |\n| T | F | F |  F  |      F        |\n| F | T | T |  F  |      T        |\n| F | T | F |  F  |      F        |\n| F | F | T |  F  |      T        |\n| F | F | F |  F  |      F        |\n\n**Explanation:**\n\n- **'p and q'** is only true when BOTH p and q are true.\n- **'(p and q) or r'** is true when EITHER 'p and q' is true, OR 'r' is true, or BOTH.\n\nThis step-by-step breakdown demonstrates the logical evaluation required for each row of the truth table, confirming its correctness.",
            "options": [
                "Constructing Truth Tables for Simple Propositions",
                "Constructing Truth Tables for Complex Propositions",
                "Identifying Logical Connectives",
                "Evaluating Truth Values"
            ],
            "correct_option": "A"
        },
        {
            "question": "Analyze the truth table below and determine the logically equivalent statement to the given expression: ~(p \u2192 q) \u2227 r\n\n| p | q | r | ~(p \u2192 q) \u2227 r |\n|---|---|---|----------------|\n| T | T | T | F |\n| T | T | F | F |\n| T | F | T | T |\n| T | F | F | F |\n| F | T | T | F |\n| F | T | F | F |\n| F | F | T | F |\n| F | F | F | F |\n\nWhich of the following options is logically equivalent to the expression represented in the truth table?\n\n a) (p \u2227 \u00acq) \u2227 r\n b) \u00ac(p \u2192 q) \u2192 r \n c) (p \u2192 q) \u2228 r\n d) \u00acp \u2227 q \u2227 r ",
            "difficulty": "medium",
            "reasoning": "The truth table shows that the statement ~(p \u2192 q) \u2227 r is true only when 'p' is true, 'q' is false, and 'r' is true. Let's break down why this is the case and how it leads us to the correct answer.\n\n1. **Understanding the original expression:**\n   - (p \u2192 q): This is an implication, meaning 'if p, then q'. It's only false when 'p' is true and 'q' is false.\n   - ~(p \u2192 q): The negation flips the truth value. It's true when 'p' is true and 'q' is false.\n   -  ... \u2227 r:  For the entire expression to be true, this conjunction requires 'r' to be true as well.\n\n2. **Analyzing the options:**\n   - a) (p \u2227 \u00acq) \u2227 r: This option precisely matches the truth table's condition for truth: 'p' true, 'q' false, and 'r' true. \n   - b) \u00ac(p \u2192 q) \u2192 r: This introduces another implication, changing the logic. It won't always align with the original truth table.\n   - c) (p \u2192 q) \u2228 r:  This disjunction is true in more cases than the original expression, as it's true even if only 'r' is true.\n   - d) \u00acp \u2227 q \u2227 r: This requires 'p' to be false, which contradicts the truth table.\n\n**Therefore, the correct answer is (a) (p \u2227 \u00acq) \u2227 r.  This option captures the exact conditions (p true, q false, r true) under which the original expression, ~(p \u2192 q) \u2227 r, is true.**",
            "options": [
                "a)",
                "b)",
                "c)",
                "d)"
            ],
            "correct_option": "A"
        },
        {
            "question": "**scenario**: Imagine a vending machine that has a sign saying: \"If you insert $1.50, you will get a soda.\" Let 'P' represent \"inserting $1.50\" and 'Q' represent \"getting a soda.\" \n**truthTable**: | P | Q | P \u2192 Q |\n|---|---|---|\n| T | T |   |\n| T | F |   |\n| F | T |   |\n| F | F |   |\n**question**: Considering the real-world behavior of a vending machine, complete the truth table by filling in the missing truth values for 'P \u2192 Q'.\n",
            "difficulty": "medium",
            "reasoning": "This question tests the student's understanding of conditional statements and their application to a real-world scenario. Here's how to break down the reasoning: \n\n**Understanding the Scenario:** The vending machine scenario highlights a key aspect of conditional statements \u2013 they only guarantee an outcome (getting a soda) if a specific condition is met (inserting $1.50).\n\n**Analyzing the Truth Table:**\n* **Row 1 (T, T):**  If you insert $1.50 (P is True) and the machine works as expected, you will get a soda (Q is True). This makes the statement 'P \u2192 Q' True.\n* **Row 2 (T, F):** If you insert $1.50 (P is True) but don't get a soda (Q is False), the vending machine is broken! The statement 'P \u2192 Q' is False because the expected outcome didn't happen.\n* **Row 3 (F, T):** This is where it gets interesting. You didn't insert $1.50 (P is False), but somehow you still got a soda (Q is True). Maybe someone left a free soda!  Importantly, the original statement doesn't say anything about what happens if you *don't* insert money.  Since the condition (inserting money) wasn't met, the statement 'P \u2192 Q' is still considered True \u2013 it hasn't been violated.\n* **Row 4 (F, F):**  You didn't insert $1.50 (P is False), and you didn't get a soda (Q is False). This aligns with the vending machine's rule, so 'P \u2192 Q' is True. \n\n**Completed Truth Table:**\n| P | Q | P \u2192 Q |\n|---|---|---|\n| T | T |  T  |\n| T | F |  F  |\n| F | T |  T  |\n| F | F |  T  |",
            "options": [
                "F",
                "T",
                "F, T, F",
                "T, F, T"
            ],
            "correct_option": "D"
        },
        {
            "question": "**statement**: [(P \u2228 \u00acQ) \u2227 (R \u2192 Q)] \u2194 \u00ac(P \u2227 S)\n**instructions**: Construct a truth table for the following expression: [(P \u2228 \u00acQ) \u2227 (R \u2192 Q)] \u2194 \u00ac(P \u2227 S)\n**difficulty**: 6\n",
            "difficulty": "medium",
            "reasoning": "This question falls under the 'Truth Tables for Complex Logical Expressions' subtopic within 'Logical Reasoning - Truth Tables'. It involves understanding various logical operators (OR, AND, NOT, implication) and their application in a larger expression.  The nested structure and length of the expression contribute to its medium difficulty.\n\nHere's how to solve it step-by-step:\n\n1. **Identify variables:**  We have four propositional variables: P, Q, R, and S.\n\n2. **Create the table structure:** With four variables, we need 2\u2074 = 16 rows in our truth table to cover all possible truth value combinations.\n\n3. **Break down the expression:** Solve it in parts to maintain clarity. Create separate columns for:\n    *  \u00acQ\n    *  (P \u2228 \u00acQ)\n    *  (R \u2192 Q)\n    *  [(P \u2228 \u00acQ) \u2227 (R \u2192 Q)] \n    *  (P \u2227 S)\n    *  \u00ac(P \u2227 S)\n    *  [(P \u2228 \u00acQ) \u2227 (R \u2192 Q)] \u2194 \u00ac(P \u2227 S) \n\n4. **Populate the table:**  For each row (representing a unique combination of truth values for P, Q, R, S), evaluate the expression by applying the operator rules in each sub-expression until you reach the final result in the last column.\n\n**Example for a single row (Let's say P = True, Q = False, R = True, S = False):**\n\n* \u00acQ = \u00ac(False) = True\n* (P \u2228 \u00acQ) = (True \u2228 True) = True\n* (R \u2192 Q) = (True \u2192 False) = False\n* [(P \u2228 \u00acQ) \u2227 (R \u2192 Q)] = (True \u2227 False) = False\n* (P \u2227 S) = (True \u2227 False) = False\n* \u00ac(P \u2227 S) = \u00ac(False) = True\n* [(P \u2228 \u00acQ) \u2227 (R \u2192 Q)] \u2194 \u00ac(P \u2227 S) = (False \u2194 True) = False \n\nRepeat this for all 16 rows to complete the truth table.  \n\nVerifying the mathematical and logical correctness involves ensuring that:\n* You apply the truth table rules for each operator accurately.\n* The order of operations (parentheses, negation, conjunction, disjunction, implication, equivalence) is followed.",
            "options": [
                "16",
                "4",
                "8",
                "12"
            ],
            "correct_option": "A"
        },
        {
            "question": "Imagine you're creating a security system for a vault. The vault unlocks ONLY when two conditions are met simultaneously: a keycard is swiped (represent this as 'K') AND a secret code is entered correctly (represent this as 'C').  \n\n(a) Build a truth table representing the scenario where the vault unlocks. \n(b) Now, express the scenario where the vault does NOT unlock as a negated compound statement. \n(c) Construct a truth table for this negated statement (when the vault does NOT unlock). \n(d)  Identify the rows in both truth tables where the truth values for the vault unlocking and not unlocking are opposites.",
            "difficulty": "medium",
            "reasoning": "This question delves into 'Negations of Compound Statements' within the broader context of 'Logical Reasoning - Truth Tables.' It's designed to be medium difficulty due to the combination of concepts:\n\n1. **Understanding AND Logic:** Students must grasp that the vault unlocks ONLY when BOTH conditions (keycard AND code) are TRUE.\n2. **Negation:**  The challenge lies in accurately expressing the opposite scenario (when the vault does NOT unlock). This requires understanding that negating an AND statement often involves using OR and NOT operators.\n3. **Truth Table Construction:** Students need to systematically build truth tables for both the original scenario and its negation.\n4. **Comparison and Analysis:** Finally, they must analyze the truth tables to identify the rows where the original statement and its negation have opposite truth values, showcasing a deeper understanding of negation in a practical context.\n\n**Solution:**\n\n**(a) Truth Table for Vault Unlocking:**\n\n| K (Keycard) | C (Code) | Vault Unlocks (K AND C) |\n|---|---|---|\n| True | True | True |\n| True | False | False |\n| False | True | False |\n| False | False | False |\n\n**(b) Negation of the Statement:**\n\nThe original statement is 'K AND C'. The negation is 'NOT (K AND C)' which can also be expressed as 'NOT K OR NOT C' using De Morgan's Law.\n\n**(c) Truth Table for Vault NOT Unlocking:**\n\n| K (Keycard) | C (Code) | NOT K | NOT C | Vault Does NOT Unlock (NOT K OR NOT C)|\n|---|---|---|---|---|\n| True | True | False | False | False |\n| True | False | False | True | True |\n| False | True | True | False | True |\n| False | False | True | True | True |\n\n**(d) Comparison:**\n\nLooking at the rows of both truth tables, we see opposite truth values in the following cases:\n\n* **Row 2 (K = True, C = False):** The vault unlocks when both are true but doesn't unlock when the code is incorrect.\n* **Row 3 (K = False, C = True):** Similar to above, the vault doesn't unlock if the keycard is missing.\n* **Row 4 (K = False, C = False):**  Naturally, the vault doesn't unlock if both the card and code are incorrect.\n\nThis exercise reinforces that the negation of a compound statement flips the truth values, leading to opposite outcomes in the scenarios where the original conditions are not fully met.",
            "options": [
                "Easy",
                "Medium",
                "Hard",
                "Very Hard"
            ],
            "correct_option": "B"
        },
        {
            "question": "Imagine you're designing a security system with two sensors (Sensor A and Sensor B) and an alarm. The alarm should trigger if either: (1) both sensors are activated, or (2) Sensor A is activated, and Sensor B is deactivated.  \n\nLet 'p' represent 'Sensor A is activated' and 'q' represent 'Sensor B is activated'.  \n\nWhich of the following logical statements accurately represents the condition for the alarm to trigger? \n\n Construct a truth table to determine the correct statement. \n\n",
            "difficulty": "medium",
            "reasoning": "This question falls under 'Using Truth Tables to Prove Logical Theorems' as it requires constructing a truth table to analyze a logical statement representing a real-world scenario. \n\nHere's how to solve it:\n\n1. **Define the propositions:**\n    * p: Sensor A is activated\n    * q: Sensor B is activated\n\n2. **Translate the conditions into logical statements:**\n    * Condition 1: Both sensors activated: p AND q, represented as (p \u2227 q)\n    * Condition 2: Sensor A activated, Sensor B deactivated: p AND (NOT q), represented as (p \u2227 \u00acq)\n\n3. **Combine the conditions with OR (since the alarm triggers if *either* condition is met):**\n    *  (p \u2227 q) OR (p \u2227 \u00acq) \n\n4. **Construct the truth table:**\n\n| p | q | \u00acq | (p \u2227 q) | (p \u2227 \u00acq) | (p \u2227 q) \u2228 (p \u2227 \u00acq) |\n|---|---|---|---|---|---| \n| T | T | F | T     | F       | T                   |\n| T | F | T | F     | T       | T                   |\n| F | T | F | F     | F       | F                   |\n| F | F | T | F     | F       | F                   |\n\n5. **Analyze the truth table:** The alarm triggers (statement is true) in the cases where either both sensors are activated, or Sensor A is activated while Sensor B is deactivated.\n\nTherefore, the correct logical statement representing the alarm trigger condition is **(p \u2227 q) \u2228 (p \u2227 \u00acq)**. ",
            "options": [
                "(A)  p \u2227 q",
                "(B)  p \u2228 q",
                "(C)  (p \u2227 q) \u2228 (p \u2227 \u00acq)",
                "(D)  (p \u2228 q) \u2227 (\u00acp \u2228 \u00acq)"
            ],
            "correct_option": "C"
        },
        {
            "question": "**statement**: [(p \u2192 q) \u2227 (q \u2192 r)] \u2192 (p \u2192 r)\n**task**: Construct a truth table for the given logical statement and determine if it represents a tautology.\n",
            "difficulty": "medium",
            "reasoning": "This question falls under the 'Determining Tautologies using Truth Tables' subtopic within the broader topic of 'Logical Reasoning - Truth Tables'.  Here's a step-by-step solution and explanation:\n\n**1. Define Propositional Variables:**\n   We have three propositional variables in this statement: p, q, and r. \n\n**2. Create the Truth Table Structure:**\n   With three variables, our truth table will have 2\u00b3 = 8 rows to cover all possible truth value combinations for p, q, and r. The table's columns will be:\n   | p | q | r | p \u2192 q | q \u2192 r | (p \u2192 q) \u2227 (q \u2192 r) | p \u2192 r | [(p \u2192 q) \u2227 (q \u2192 r)] \u2192 (p \u2192 r) |\n   |---|---|---|---|---|---|---|---| \n\n**3. Fill in Truth Values for p, q, and r:**\n   Complete the first three columns with all possible truth value combinations (T=True, F=False):\n   | p | q | r | p \u2192 q | q \u2192 r | (p \u2192 q) \u2227 (q \u2192 r) | p \u2192 r | [(p \u2192 q) \u2227 (q \u2192 r)] \u2192 (p \u2192 r) |\n   |---|---|---|---|---|---|---|---| \n   | T | T | T |       |       |                |       |                              |\n   | T | T | F |       |       |                |       |                              |\n   | T | F | T |       |       |                |       |                              |\n   | T | F | F |       |       |                |       |                              |\n   | F | T | T |       |       |                |       |                              |\n   | F | T | F |       |       |                |       |                              |\n   | F | F | T |       |       |                |       |                              |\n   | F | F | F |       |       |                |       |                              |\n\n**4. Calculate Truth Values for Implications (\u2192):**\n   Remember, an implication (p \u2192 q) is only false when the antecedent (p) is true and the consequent (q) is false. Calculate the truth values for 'p \u2192 q', 'q \u2192 r', and 'p \u2192 r':\n   | p | q | r | p \u2192 q | q \u2192 r | (p \u2192 q) \u2227 (q \u2192 r) | p \u2192 r | [(p \u2192 q) \u2227 (q \u2192 r)] \u2192 (p \u2192 r) |\n   |---|---|---|---|---|---|---|---| \n   | T | T | T | T     | T     |                | T     |                              |\n   | T | T | F | T     | F     |                | F     |                              |\n   | T | F | T | F     | T     |                | T     |                              |\n   | T | F | F | F     | T     |                | F     |                              |\n   | F | T | T | T     | T     |                | T     |                              |\n   | F | T | F | T     | F     |                | T     |                              |\n   | F | F | T | T     | T     |                | T     |                              |\n   | F | F | F | T     | T     |                | T     |                              |\n\n**5.  Calculate for Conjunction (\u2227):**\n   A conjunction (p \u2227 q) is true only when both p and q are true. Calculate for '(p \u2192 q) \u2227 (q \u2192 r)':\n    | p | q | r | p \u2192 q | q \u2192 r | (p \u2192 q) \u2227 (q \u2192 r) | p \u2192 r | [(p \u2192 q) \u2227 (q \u2192 r)] \u2192 (p \u2192 r) |\n   |---|---|---|---|---|---|---|---| \n   | T | T | T | T     | T     | T                | T     |                              |\n   | T | T | F | T     | F     | F                | F     |                              |\n   | T | F | T | F     | T     | F                | T     |                              |\n   | T | F | F | F     | T     | F                | F     |                              |\n   | F | T | T | T     | T     | T                | T     |                              |\n   | F | T | F | T     | F     | F                | T     |                              |\n   | F | F | T | T     | T     | T                | T     |                              |\n   | F | F | F | T     | T     | T                | T     |                              |\n\n**6. Calculate the Final Implication:**\n    Complete the last column for '[(p \u2192 q) \u2227 (q \u2192 r)] \u2192 (p \u2192 r)':\n    | p | q | r | p \u2192 q | q \u2192 r | (p \u2192 q) \u2227 (q \u2192 r) | p \u2192 r | [(p \u2192 q) \u2227 (q \u2192 r)] \u2192 (p \u2192 r) |\n   |---|---|---|---|---|---|---|---| \n   | T | T | T | T     | T     | T                | T     |      T                         |\n   | T | T | F | T     | F     | F                | F     |      T                         |\n   | T | F | T | F     | T     | F                | T     |      T                         |\n   | T | F | F | F     | T     | F                | F     |      T                         |\n   | F | T | T | T     | T     | T                | T     |      T                         |\n   | F | T | F | T     | F     | F                | T     |      T                         |\n   | F | F | T | T     | T     | T                | T     |      T                         |\n   | F | F | F | T     | T     | T                | T     |      T                         |\n\n**7. Determine Tautology:**\n   Since the final column '[(p \u2192 q) \u2227 (q \u2192 r)] \u2192 (p \u2192 r)' contains only 'T' (True) values, the statement is a tautology.  A tautology is a logical statement that is always true, regardless of the truth values of its propositional variables.\n",
            "options": [
                "False",
                "Maybe",
                "True",
                "Undetermined"
            ],
            "correct_option": "C"
        },
        {
            "question": "Imagine you are designing a simple search engine for a library database. Users can search for books using two keywords: 'Fiction' (F) and 'Available' (A). The search engine should return a book if it matches at least one of the keywords. \n\nConstruct a truth table representing the search engine's logic. Which of the following combinations of keywords would result in the search engine returning books?",
            "difficulty": "medium",
            "reasoning": "This question checks the understanding of applying truth tables to represent simple search logic in Computer Science, specifically information retrieval. Here's how we can solve it:\n\n1. **Identifying Propositions:** We have two propositions:\n    * F: Book is Fiction \n    * A: Book is Available\n\n2. **Defining the Logic:** The search engine uses the OR logic. It returns a book if it's Fiction OR Available.\n\n3. **Constructing the Truth Table:**\n\n| F | A | F OR A |\n|---|---|--------|\n| T | T |   T    |\n| T | F |   T    |\n| F | T |   T    |\n| F | F |   F    |\n\n4. **Analyzing the Truth Table:** The truth table shows that the search engine returns books (F OR A is True) in all cases except when the book is neither Fiction nor Available (F=False, A=False). \n\nTherefore, the search engine would return books for these combinations:\n* Fiction = True, Available = True\n* Fiction = True, Available = False\n* Fiction = False, Available = True",
            "options": [
                "All except Fiction = False, Available = False",
                "Fiction = True, Available = True only",
                "Fiction = True, Available = False only",
                "Fiction = False, Available = True only"
            ],
            "correct_option": "A"
        },
        {
            "question": "Imagine you're trying to use a truth table to analyze this argument: 'All birds can fly. Penguins are birds. Therefore, penguins can fly.' What's the main limitation of using a truth table in this case?",
            "difficulty": "medium",
            "reasoning": "This question targets the limitation of truth tables in handling arguments involving implicit knowledge and the meaning of terms. Here's why:\n\n* **The Issue:**  The argument is logically invalid, even though someone might mistakenly think it's valid based on its structure. The truth table would show the argument structure as valid (if P then Q, P, therefore Q), but it can't account for the fact that the premise 'All birds can fly' is factually incorrect.\n* **Truth Tables and Meaning:** Truth tables work on the truth values of propositions (true or false) and the logical connectors between them. They don't analyze the actual meaning of the propositions themselves.\n* **Why Option C is Correct:**  Truth tables can't represent the background knowledge we use to determine that the premise about all birds flying is false. This knowledge is outside the scope of the truth table itself.\n\nLet's look at potential answer choices (only one is correct):\n\nA. The argument is too simple for a truth table to be useful. (Incorrect - truth tables can handle simple arguments)\nB.  The argument contains too many propositions. (Incorrect - it has a standard argument structure)\nC. The truth table cannot account for the real-world knowledge that not all birds can fly. (Correct!)\nD. The conclusion of the argument is false, making the truth table invalid. (Incorrect - a truth table tests validity, not the actual truth of the conclusion) ",
            "options": [
                "Too simple",
                "Too many propositions",
                "Cannot account for real-world knowledge",
                "Invalid conclusion"
            ],
            "correct_option": "C"
        },
        {
            "question": "**Premise 1**: If online education is effective, then students perform well in exams.\n**Premise 2**: Students are not performing well in exams.\n**Conclusion**: Therefore, online education is not effective.\n**Question**: Is the argument valid?\n**Instructions**: Construct a truth table to determine the validity of the argument.\n",
            "difficulty": "medium",
            "reasoning": "## Reasoning:\n\nThis question assesses the understanding of **Modus Tollens**, a valid argument form, within the context of truth tables.\n\n**1. Define Propositions:**\n\n* **P:** Online education is effective.\n* **Q:** Students perform well in exams.\n\n**2. Symbolic Representation:**\n\n* Premise 1: P \u2192 Q\n* Premise 2: \u00acQ\n* Conclusion: \u00acP\n\n**3. Construct the Truth Table:**\n\n| P | Q | P \u2192 Q | \u00acQ | \u00acP |\n|---|---|---|---|---|\n| T | T | T | F | F |\n| T | F | F | T | F |\n| F | T | T | F | T |\n| F | F | T | T | T |\n\n**4. Analyze the Truth Table:**\n\n*  We need to look for rows where both premises (P \u2192 Q and \u00acQ) are true.\n*  We find this situation in the last row where P is False and Q is False. \n*  Crucially, in this row, the conclusion (\u00acP) is also True.\n\n**5. Determine Validity:**\n\n* An argument is valid if, whenever all the premises are true, the conclusion is also true.\n* Since the conclusion is true in the row where both premises are true, the argument is **valid**.\n\n**Therefore, the argument presented is a valid example of Modus Tollens. Even though the premises might not be universally true, the *structure* of the argument ensures logical validity.**",
            "options": [
                "Invalid",
                "Valid",
                "Maybe",
                "Unsure"
            ],
            "correct_option": "B"
        },
        {
            "question": "Imagine you're building a robot chef!  The robot has two sensors: one detects if the soup is too cold (C) and the other detects if the soup is too salty (S). The robot is programmed to add pepper (P) to the soup ONLY IF the soup is NOT too cold OR the soup is too salty. Construct a truth table that represents the robot's pepper-adding logic.",
            "difficulty": "medium",
            "reasoning": "This question tests the understanding of constructing truth tables for simple propositions with a focus on the logical connectives 'NOT' and 'OR'. Here's how to solve it step-by-step:\n\n**1. Identify the Propositions:**\n\n* C: Soup is too cold\n* S: Soup is too salty\n* P: Robot adds pepper\n\n**2. Formulate the Logical Statement:**\n\nThe problem states pepper is added ONLY IF the soup is NOT too cold OR the soup is too salty. This translates to:\n\n(NOT C) OR S  THEN P \n\n**3. Construct the Truth Table:**\n\nWe have three propositions (C, S, P), so our truth table will have 2^3 = 8 rows.\n\n| C | S | NOT C | (NOT C) OR S | P |\n|---|---|-------|-------------|---|\n| T | T |  F     |      T      | T |\n| T | F |  F     |      F      | F |\n| F | T |  T     |      T      | T |\n| F | F |  T     |      T      | T |\n\n**Explanation:**\n\n* **Column 1 & 2 (C, S):** We list all possible combinations of truth values for C and S (T=True, F=False).\n* **Column 3 (NOT C):**  We negate the truth values of C.\n* **Column 4 ((NOT C) OR S):** We evaluate the 'OR' condition. 'OR' is true if at least one of its inputs is true.\n* **Column 5 (P):** The robot adds pepper (P is true) when the condition '(NOT C) OR S' is true. \n\nTherefore, the truth table accurately represents the robot chef's pepper-adding logic based on the given sensor inputs.",
            "options": [
                "4",
                "8",
                "12",
                "16"
            ],
            "correct_option": "B"
        },
        {
            "question": "Complete the following truth table for the logical expression (A AND (NOT B)) OR C:\n\n| A | B | C | (A AND (NOT B)) OR C |\n|---|---|---|---| \n| T | T | T | ? |\n| T | T | F | ? |\n| T | F | T | ? |\n| T | F | F | ? |\n| F | T | T | ? |\n| F | T | F | ? |\n| F | F | T | ? |\n| F | F | F | ? |\n\nSelect the correct output sequence from the options below to replace the '?' marks:\n\na) T F T T T F T F\nb) T F T F T F T F\nc) T T T F T F T F\nd) T F T T F F T T",
            "difficulty": "medium",
            "reasoning": "This question tests a student's ability to:\n\n* **Understand Truth Tables:**  Interpret the structure and meaning of a truth table.\n* **Apply Logical Operators:** Correctly apply the AND, OR, and NOT operators according to their truth table definitions.\n* **Evaluate Complex Expressions:** Break down a complex logical expression into smaller parts and evaluate them step-by-step.\n\n**Step-by-step Solution:**\n\n1. **Focus on the inner parenthesis (NOT B):**  For each row, if B is True, NOT B is False; if B is False, NOT B is True.\n\n2. **Next, calculate (A AND (NOT B)):** For each row, this is True only if both A and (NOT B) are True.\n\n3. **Finally, calculate (A AND (NOT B)) OR C:** For each row, this is True if either (A AND (NOT B)) is True or C is True.\n\nFollowing these steps, the completed truth table looks like this:\n\n| A | B | C | (A AND (NOT B)) OR C |\n|---|---|---|---| \n| T | T | T | **T** |\n| T | T | F | **F** |\n| T | F | T | **T** |\n| T | F | F | **T** |\n| F | T | T | **T** |\n| F | T | F | **F** |\n| F | F | T | **T** |\n| F | F | F | **F** |\n\nTherefore, the correct answer is **(d) T F T T F F T F**.",
            "options": [
                "a) T F T T T F T F",
                "b) T F T F T F T F",
                "c) T T T F T F T F",
                "d) T F T T F F T T"
            ],
            "correct_option": "D"
        },
        {
            "question": "**statement**: If a shape is a triangle, then it does not have four sides, provided it is not a square.\n**truthtable**: | Triangle | Four Sides | Square | Triangle \u2192 (Not Four Sides, if not a Square) | \n|---|---|---|---| \n| True | True | True |  ? |\n| True | True | False |  ? |\n| True | False | True |  True |\n| True | False | False | True |\n| False | True | True |  ? |\n| False | True | False |  ? |\n| False | False | True |  ? |\n| False | False | False |  ? |\n**task**: Complete the truth table by filling in the missing values.\n",
            "difficulty": "medium",
            "reasoning": "This question falls under 'Truth Tables for Conditional Statements (Implication)' within the broader topic of 'Logical Reasoning - Truth Tables'. \n\nLet's break down the statement:\n* **'If a shape is a triangle...'** This sets up our hypothesis (P). \n* **'...then it does not have four sides...'** This is our conclusion (Q), but with a condition attached. \n* **'...provided it is not a square.'** This condition (R) adds a layer of complexity.  \n\nEssentially, we're evaluating P \u2192 (Q, given not R). \n\nLet's complete the truth table step-by-step:\n\n1. **Rows 1 & 2 (Triangle, Four Sides):** The condition 'not a square' is crucial here.  \n    * Row 1: If it's a triangle and a square, it does have four sides, making the overall implication FALSE.\n    * Row 2:  If it's a triangle, not a square, but still has four sides, the implication is also FALSE.\n\n2. **Rows 5 & 6 (Not a Triangle, Four Sides):** Since the hypothesis (being a triangle) is false, the implication is automatically TRUE regardless of the number of sides or whether it's a square.\n\n3. **Rows 7 & 8 (Not a Triangle, Not Four Sides):** Similar to the previous point, a false hypothesis leads to a TRUE implication in all cases. \n\nTherefore the complete truth table is:\n| Triangle | Four Sides | Square | Triangle \u2192 (Not Four Sides, if not a Square) | \n|---|---|---|---| \n| True | True | True |  False |\n| True | True | False |  False |\n| True | False | True |  True |\n| True | False | False | True |\n| False | True | True |  True |\n| False | True | False |  True |\n| False | False | True |  True |\n| False | False | False |  True |",
            "options": [
                "False",
                "True",
                "Maybe",
                "None"
            ],
            "correct_option": "A"
        },
        {
            "question": "Determine if the following two logical statements are logically equivalent using truth tables:\n\nStatement 1:  (p \u2192 \u00acq) \u2227 (q \u2228 r)\n\nStatement 2:  \u00ac(p \u2227 q) \u2192 (q \u2228 r)",
            "difficulty": "medium",
            "reasoning": "**1. Construct the Truth Tables:**\n\nFirst, we need to construct truth tables for both statements. Since we have three variables (p, q, r), each truth table will have 2\u00b3 = 8 rows to represent all possible combinations of truth values.\n\n**Truth Table for Statement 1: (p \u2192 \u00acq) \u2227 (q \u2228 r)**\n\n| p | q | r | \u00acq | p \u2192 \u00acq | q \u2228 r | (p \u2192 \u00acq) \u2227 (q \u2228 r) |\n|---|---|---|---|---|---|---|\n| T | T | T | F | F | T | F |\n| T | T | F | F | F | T | F |\n| T | F | T | T | T | T | T |\n| T | F | F | T | T | F | F |\n| F | T | T | F | T | T | T |\n| F | T | F | F | T | T | T |\n| F | F | T | T | T | T | T |\n| F | F | F | T | T | F | F |\n\n**Truth Table for Statement 2: \u00ac(p \u2227 q) \u2192 (q \u2228 r)**\n\n| p | q | r | p \u2227 q | \u00ac(p \u2227 q) | q \u2228 r | \u00ac(p \u2227 q) \u2192 (q \u2228 r) |\n|---|---|---|---|---|---|---|\n| T | T | T | T | F | T | T |\n| T | T | F | T | F | T | T |\n| T | F | T | F | T | T | T |\n| T | F | F | F | T | F | F |\n| F | T | T | F | T | T | T |\n| F | T | F | F | T | T | T |\n| F | F | T | F | T | T | T |\n| F | F | F | F | T | F | F |\n\n**2. Compare the Final Columns:**\n\nNow, compare the final column of each truth table, which represents the truth values of the entire statement for all possible truth value combinations of p, q, and r.\n\nNotice that the final columns in both truth tables are **not identical**. For example, when p is true, q is false, and r is false, Statement 1 evaluates to false, while Statement 2 evaluates to true.\n\n**3. Conclusion:**\n\nSince the final columns of the truth tables are not identical, **Statement 1 and Statement 2 are not logically equivalent**.",
            "options": [
                "True",
                "False",
                "Equivalent",
                "Not Equivalent"
            ],
            "correct_option": "D"
        },
        {
            "question": "**statement**: A student will pass the exam if they study diligently or attend all classes, and they get enough sleep.\n**task**: Write the negation of the compound statement using logical operators (\u00ac, \u2227, \u2228, \u2192, \u2194). Then, construct the truth table for the original statement and its negation.\n",
            "difficulty": "medium",
            "reasoning": "## Reasoning:\n\n**1. Breaking Down the Statement:**\n\nLet's assign propositions to each part of the statement:\n\n*  p: The student studies diligently.\n*  q: The student attends all classes.\n*  r: The student gets enough sleep.\n*  s: The student passes the exam.\n\nNow we can rewrite the statement symbolically:\n(p \u2228 q) \u2227 r \u2192 s\n\n**2. Negating the Statement:**\n\nTo negate the entire statement, we'll apply negation step-by-step using De Morgan's Law and negation rules for implication:\n\n*  \u00ac[(p \u2228 q) \u2227 r \u2192 s] \n*  \u2261 \u00ac[(p \u2228 q) \u2227 r] \u2228 s  (Negation of implication)\n*  \u2261 [\u00ac(p \u2228 q) \u2228 \u00acr] \u2228 s (De Morgan's Law)\n*  \u2261 [(\u00acp \u2227 \u00acq) \u2228 \u00acr] \u2228 s (De Morgan's Law)\n\nTherefore, the negation of the statement is: **(\u00acp \u2227 \u00acq) \u2228 \u00acr \u2228 s** \n\nIn words: \"The student doesn't study diligently and doesn't attend all classes, or they don't get enough sleep, or they still pass the exam.\"\n\n**3. Constructing the Truth Table:**\n\nWe need to create a truth table with columns for each proposition (p, q, r, s) and the original statement ((p \u2228 q) \u2227 r \u2192 s) and its negation ((\u00acp \u2227 \u00acq) \u2228 \u00acr \u2228 s).\n\n| p | q | r | s | (p \u2228 q) | (p \u2228 q) \u2227 r | (p \u2228 q) \u2227 r \u2192 s | \u00acp | \u00acq | \u00acr | (\u00acp \u2227 \u00acq) | (\u00acp \u2227 \u00acq) \u2228 \u00acr | (\u00acp \u2227 \u00acq) \u2228 \u00acr \u2228 s |\n|---|---|---|---|---|---|---|---|---|---|---|---|---| \n| T | T | T | T | T | T | T | F | F | F | F | F | T |\n| T | T | T | F | T | T | F | F | F | F | F | F | F |\n| T | T | F | T | T | F | T | F | F | T | F | T | T |\n| T | T | F | F | T | F | T | F | F | T | F | T | T |\n| T | F | T | T | T | T | T | F | T | F | F | F | T |\n| T | F | T | F | T | T | F | F | T | F | F | F | F |\n| T | F | F | T | T | F | T | F | T | T | T | T | T |\n| T | F | F | F | T | F | T | F | T | T | T | T | T |\n| F | T | T | T | T | T | T | T | F | F | F | F | T |\n| F | T | T | F | T | T | F | T | F | F | F | F | F |\n| F | T | F | T | T | F | T | T | F | T | T | T | T |\n| F | T | F | F | T | F | T | T | F | T | T | T | T |\n| F | F | T | T | F | F | T | T | T | F | F | F | T |\n| F | F | T | F | F | F | T | T | T | F | F | F | F |\n| F | F | F | T | F | F | T | T | T | T | T | T | T |\n| F | F | F | F | F | F | T | T | T | T | T | T | T |\n\n**4. Analysis:**\n\nThe truth table confirms that the original statement and its negation have opposite truth values for every possible combination of truth values for p, q, r, and s. This is expected since a statement and its negation are logically contradictory.\n",
            "options": [
                "De Morgan's Law",
                "Implication",
                "Negation",
                "Truth Table"
            ],
            "correct_option": "A"
        },
        {
            "question": "A logician constructs a truth table for the following statement: \"If a creature is a unicorn, then it has a horn. Therefore, if a creature is not a unicorn, then it does not have a horn.\"  What limitation of truth tables does this example highlight?",
            "difficulty": "medium",
            "reasoning": "This question addresses the limitation of truth tables in handling the nuances of logical arguments, specifically the fallacy of denying the antecedent. Let's break it down: \n\n**1. Understanding the Argument:** \nThe argument structure is: If P, then Q. Therefore, if not P, then not Q.  This is a classic fallacy\u2014just because something isn't a unicorn doesn't mean it can't have a horn (think rhinos!). \n\n**2. Truth Table Perspective:**\nA truth table would only assess whether the conclusion is true based on the premises *within the given truth values*. It wouldn't capture the fallacy in the argument's structure itself. A truth table might show the conclusion as true in some cases, misleadingly suggesting the argument is valid. \n\n**3. The Limitation:** \nThis example highlights that truth tables are tools for analyzing the *truth values* of propositions and compound statements, not for assessing the *validity* of an argument's logical structure.  While they can help identify some invalid arguments, they can't capture all forms of logical fallacies. \n",
            "options": [
                "Truth tables cannot identify all logical fallacies.",
                "Truth tables only assess truth values, not argument validity.",
                "Truth tables can be misleading when dealing with fallacies.",
                "Truth tables cannot handle conditional statements."
            ],
            "correct_option": "B"
        },
        {
            "question": "Construct a truth table for the statement \"Alison will go to the park or the library, but not both.\", using 'P' to represent \"Alison will go to the park\" and 'L' to represent \"Alison will go to the library.\"",
            "difficulty": "medium",
            "reasoning": "This question tests the student's understanding of constructing truth tables, particularly their ability to handle more complex logical connectives like 'exclusive or'.\n\n**1. Identifying the Propositions:**\n\n   * P: Alison will go to the park.\n   * L: Alison will go to the library.\n\n**2. Understanding the Connective:**\n\n   The statement uses \"but not both,\" which translates to the exclusive or (XOR) logical connective.  This means the statement is true if *only one* of the propositions is true.\n\n**3. Constructing the Truth Table:**\n\n| P | L | P XOR L |\n|---|---|----------|\n| T | T |   F      |\n| T | F |   T      |\n| F | T |   T      |\n| F | F |   F      |\n\n**Explanation:**\n\n* **Row 1 (P is True, L is True):**  Alison cannot be at both places simultaneously, so the statement is False.\n* **Row 2 (P is True, L is False):** Alison is at the park but not the library, making the statement True.\n* **Row 3 (P is False, L is True):**  Alison is at the library but not the park, making the statement True.\n* **Row 4 (P is False, L is False):** Alison is at neither place, making the statement False. ",
            "options": [
                "Exclusive Or",
                "Conjunction",
                "Disjunction",
                "Negation"
            ],
            "correct_option": "A"
        },
        {
            "question": "**scenario**: A programmer is working on a piece of code where two conditions, represented by variables 'P' and 'Q', determine the output.\n**statement**: The code is designed such that 'P is TRUE if and only if Q is FALSE.'\n**task**: Construct a truth table for the given statement. Based on your truth table, is it possible for both P and Q to be TRUE at the same time?\n",
            "difficulty": "medium",
            "reasoning": "**1. Understanding the Biconditional:**\n\nThe statement 'P is TRUE if and only if Q is FALSE' uses the biconditional operator. This means P is true when Q is false, AND P is false when Q is true. They are logically equivalent.\n\n**2. Constructing the Truth Table:**\n\nWe begin by listing all possible combinations of truth values for P and Q:\n\n| P | Q | P \u2194 (\u00acQ) |\n|---|---|-----------|\n| T | T |     F     |\n| T | F |     T     |\n| F | T |     T     |\n| F | F |     F     |\n\n* In the first row, if P and Q are both true, the statement 'P is TRUE if and only if Q is FALSE' is FALSE. \n* In the second row, if P is true and Q is false, the statement holds TRUE. \n* In the third row, if P is false and Q is true, the statement holds TRUE (because it works both ways). \n* In the fourth row, if P and Q are both false, the statement is FALSE.\n\n**3. Answering the Question:**\n\nLooking at the truth table, we can see that there is NO scenario where both P and Q are TRUE simultaneously. The only time the statement holds true is when one is true and the other is false. Therefore, it is not possible for both P and Q to be TRUE at the same time according to the given code design.",
            "options": [
                "Yes",
                "No",
                "Maybe",
                "Unsure"
            ],
            "correct_option": "B"
        },
        {
            "question": "Consider the statement: \"If a shape is a square, then it is a rectangle, and if a shape is a rectangle, then it has four sides.\".  Construct a truth table for this statement to determine if it is a tautology.",
            "difficulty": "medium",
            "reasoning": "This question falls under the topic of 'Determining Tautologies using Truth Tables' as it requires constructing a truth table and analyzing it to see if the given statement is always true. \n\nHere's a step-by-step solution:\n\n**1. Define the atomic propositions:**\n   * Let p represent \"The shape is a square.\" \n   * Let q represent \"The shape is a rectangle.\" \n   * Let r represent \"The shape has four sides.\" \n\n**2. Express the statement symbolically:**\n    The given statement can be written as (p \u2192 q) \u2227 (q \u2192 r) \n\n**3. Create the truth table:**\n\n| p | q | r | p \u2192 q | q \u2192 r | (p \u2192 q) \u2227 (q \u2192 r) |\n|---|---|---|-------|-------|-------------------|\n| T | T | T |   T   |   T   |        T           |\n| T | T | F |   T   |   F   |        F           |\n| T | F | T |   F   |   T   |        F           |\n| T | F | F |   F   |   T   |        F           |\n| F | T | T |   T   |   T   |        T           |\n| F | T | F |   T   |   F   |        F           |\n| F | F | T |   T   |   T   |        T           |\n| F | F | F |   T   |   T   |        T           |\n\n**4. Analyze the truth table:**\n    The statement is not a tautology because the final column, representing the truth value of the entire statement, does not contain only 'T' values. \n\n**Therefore, the statement is not a tautology.**",
            "options": [
                "Tautology",
                "Not a tautology",
                "Contradiction",
                "Contingency"
            ],
            "correct_option": "B"
        },
        {
            "question": "**statement**: A magician declares, \"If I wave my wand, then a dove will appear from my hat.\"  Consider the truthfulness of his statement in different scenarios.\n**truthTable**: |  P (Magician waves wand) | Q (Dove appears from hat) | P \u2192 Q | \n|---|---|---| \n| T | T |  **?** | \n| T | F |  **?** | \n| F | T | **?**  | \n| F | F | **?**  |\n**question**: Complete the truth table to demonstrate your understanding of conditional statements. For each combination of the magician waving his wand (P) and a dove appearing (Q), determine if the magician's original statement holds true.\n",
            "difficulty": "medium",
            "reasoning": "This question dives into the heart of conditional statements, focusing on a scenario designed to be relatable yet requiring careful consideration of truth values.  Let's break down the logic step-by-step:\n\n**1. Understanding Implication (P \u2192 Q):**  A conditional statement (P \u2192 Q) is only false when the hypothesis (P) is true and the conclusion (Q) is false. In all other cases, the conditional statement is considered true.\n\n**2. Analyzing the Scenarios:**\n    * **P (True) & Q (True):** The magician waves his wand, and a dove appears. This aligns perfectly with his statement, making the implication **true**.\n    * **P (True) & Q (False):** The magician waves his wand, but no dove appears! This directly contradicts his claim, making the implication **false**.\n    * **P (False) & Q (True):** The magician doesn't wave his wand, yet a dove mysteriously appears. This scenario doesn't disprove his statement.  Since he didn't make a claim about what happens when he *doesn't* wave the wand, the implication is still considered **true**.\n    * **P (False) & Q (False):** The magician doesn't wave his wand, and no dove appears.  Again, this doesn't contradict his original statement, so the implication remains **true**.\n\n**3. Completed Truth Table:**\n|  P (Magician waves wand) | Q (Dove appears from hat) | P \u2192 Q |\n|---|---|---|\n| T | T |  T |\n| T | F |  F |\n| F | T |  T |\n| F | F |  T |",
            "options": [
                "F",
                "T",
                "F, T, T, F",
                "T, F, T, T"
            ],
            "correct_option": "D"
        },
        {
            "question": "Construct the truth table for the negation of the following statement: 'The sky is blue and the grass is green, or it is raining.'",
            "difficulty": "medium",
            "reasoning": "This question falls under the 'Negations of Compound Statements' subtopic within 'Logical Reasoning - Truth Tables'.  Here's why it's considered medium difficulty and how to solve it:\n\n**1. Identifying Operators and Statements:**\n\n   The statement has three simple statements:\n   * p: The sky is blue\n   * q: The grass is green\n   * r: It is raining\n\n   These are connected by two logical operators:\n   *  \u2227 (and)\n   *  \u2228 (or)\n\n**2. Order of Operations:**\n\n   Just like in math, logical operators have an order of operations.  'And' (\u2227) takes precedence over 'or' (\u2228). Therefore, the statement is structured as (p \u2227 q) \u2228 r.\n\n**3. Building the Initial Truth Table:**\n\n   We create a truth table with columns for each simple statement (p, q, r) and the compound statements (p \u2227 q), ((p \u2227 q) \u2228 r), and finally \u00ac((p \u2227 q) \u2228 r), which is the negation we are looking for. \n\n   | p | q | r | p \u2227 q | (p \u2227 q) \u2228 r | \u00ac((p \u2227 q) \u2228 r) |\n   |---|---|---|-------|-------------|----------------|\n   | T | T | T |   T   |      T       |       F         |\n   | T | T | F |   T   |      T       |       F         |\n   | T | F | T |   F   |      T       |       F         |\n   | T | F | F |   F   |      F       |       T         |\n   | F | T | T |   F   |      T       |       F         |\n   | F | T | F |   F   |      F       |       T         |\n   | F | F | T |   F   |      T       |       F         |\n   | F | F | F |   F   |      F       |       T         |\n\n**4. Applying Negation:**\n\n   The final column, \u00ac((p \u2227 q) \u2228 r), represents the negation of our entire compound statement. To fill it in, we simply reverse the truth values from the ((p \u2227 q) \u2228 r) column.\n\n**Why This is Medium Difficulty:**\n\n   *  **Two Operators:**  This question requires understanding the order of operations for logical operators.\n   *  **Negation of a Compound:** Students must apply the negation to the result of the entire compound statement, not just individual parts.",
            "options": [
                "Easy",
                "Hard",
                "Medium",
                "Very Hard"
            ],
            "correct_option": "C"
        },
        {
            "question": "Two aspiring game developers, Alice and Bob, are working on a logic puzzle for their new game. They need to ensure a specific event in the game is triggered based on a set of conditions. They've come up with the following logical statements to represent when the event should occur:\n\n**Statement 1:** The event is triggered if either the player has collected all the keys (K) or defeated the final boss (B), but the treasure chest has not been opened (T).\n\n**Statement 2:**  The event is triggered if the treasure chest has not been opened (T) and either the player has collected all the keys (K) or defeated the final boss (B).\n\n Determine if these two statements are logically equivalent by constructing and comparing their truth tables. ",
            "difficulty": "medium",
            "reasoning": "Let's break down how to solve this problem step-by-step:\n\n**1. Symbolic Representation:**\n\n*  We'll use the following symbols to represent the propositions:\n    * K: The player has collected all the keys.\n    * B: The player has defeated the final boss.\n    * T: The treasure chest has been opened.\n\n* Now, let's translate the statements into symbolic logic:\n    * **Statement 1:** (K \u2228 B) \u2227 \u00acT \n    * **Statement 2:** \u00acT \u2227 (K \u2228 B)\n\n**2. Constructing the Truth Tables:**\n\n* We have three propositions (K, B, T), so our truth table will have 2\u00b3 = 8 rows.\n\n| K | B | T | K \u2228 B | \u00acT | (K \u2228 B) \u2227 \u00acT | \u00acT \u2227 (K \u2228 B) |\n|---|---|---|---|---|---|---|\n| T | T | T | T | F | F | F |\n| T | T | F | T | T | T | T |\n| T | F | T | T | F | F | F |\n| T | F | F | T | T | T | T |\n| F | T | T | T | F | F | F |\n| F | T | F | T | T | T | T |\n| F | F | T | F | F | F | F |\n| F | F | F | F | T | F | F |\n\n**3. Analyzing the Truth Tables:**\n\n*  We constructed the truth tables for both statements, carefully evaluating the connectives (\u2228 for 'or', \u2227 for 'and', and \u00ac for 'not').\n*  **Crucially, notice that the final columns for both Statement 1 and Statement 2 are identical.**  This means the truth values of each statement are the same for every possible combination of truth values for K, B, and T.\n\n**4. Conclusion:**\n\n* Since the truth tables for Statement 1 and Statement 2 are identical, we can conclude that the two statements are **logically equivalent.** In the context of the game, this means Alice and Bob's logic is sound \u2013 either statement will trigger the event under the same exact conditions.",
            "options": [
                "Not equivalent",
                "Equivalent",
                "Partially equivalent",
                "Inconclusive"
            ],
            "correct_option": "B"
        },
        {
            "question": "**premise**: All philosophers are thinkers. Some thinkers are writers. Therefore, some philosophers are writers.\n**truth_table**: | **Philosophers are Thinkers** | **Thinkers are Writers** | **Philosophers are Writers** |\n|---------------------------------|-----------------------------|-----------------------------------|\n| T                               | T                           | ?                                 |\n| T                               | F                           | ?                                 |\n| F                               | T                           | ?                                 |\n| F                               | F                           | ?                                 |\n**question**: Complete the truth table above for the given syllogistic argument.  Based on the completed truth table, determine if the argument is valid or invalid.  Explain your reasoning. (Difficulty: Medium 7/10)\n",
            "difficulty": "medium",
            "reasoning": "This question tests a student's ability to translate a syllogistic argument into a truth table and then use that table to assess the argument's validity.  Here's how to break down the solution:\n\n**1. Understanding the Argument:**\n\nThe argument follows a classic syllogistic structure:\n\n* **Major Premise:** All philosophers are thinkers.\n* **Minor Premise:** Some thinkers are writers.\n* **Conclusion:** Therefore, some philosophers are writers.\n\n**2.  Completing the Truth Table:**\n\nTo determine the truth values for the conclusion ('Philosophers are Writers'), we need to consider each possible combination of truth values for the premises.  Remember, a syllogistic argument is only valid if the conclusion is ALWAYS true when the premises are true.\n\n* **Row 1 (T, T, ?):**  If both premises are true, it's possible that some philosophers are writers, but it's not guaranteed.  We could have a scenario where all the thinkers who are writers are not philosophers. Therefore, this row is not necessarily true (T).\n* **Row 2 (T, F, ?):** If the second premise is false (no thinkers are writers), then the conclusion must also be false. This row is false (F).\n* **Row 3 (F, T, ?):** If the first premise is false, it means there are no philosophers, so the conclusion (that some philosophers are writers) cannot be true. This row is false (F).\n* **Row 4 (F, F, ?):**  Similar to row 3, if there are no philosophers, the conclusion cannot be true. This row is false (F).\n\nThe completed truth table looks like this:\n\n| **Philosophers are Thinkers** | **Thinkers are Writers** | **Philosophers are Writers** |\n|---------------------------------|-----------------------------|-----------------------------------|\n| T                               | T                           | **F**                            |\n| T                               | F                           | **F**                            |\n| F                               | T                           | **F**                            |\n| F                               | F                           | **F**                            |\n\n**3. Determining Validity:**\n\nSince the conclusion is not true in every row where the premises are true, the argument is **invalid**. The truth table helps us visualize a scenario (Row 1) where the premises might be true, but the conclusion could still be false.  This demonstrates that the conclusion doesn't logically follow from the premises in all cases.",
            "options": [
                "Valid",
                "Invalid",
                "Ambiguous",
                "Uncertain"
            ],
            "correct_option": "B"
        },
        {
            "question": "Imagine you are designing a security system for a vault that uses three sensors (A, B, and C) for added protection. The vault should only unlock (represented by output 'U' being TRUE) when specific conditions are met due to security concerns. These conditions are represented in the following logical statement:\n\n(A AND (B XOR C)) OR ((NOT A) AND B AND C)\n\nConstruct a truth table for this statement. Based on this table, determine and explain:\n\n1.  In how many scenarios will the vault unlock?\n2.  What specific sensor combinations, when TRUE, will lead to the vault unlocking?\n\nThis question assesses your ability to apply truth tables to a real-world scenario within computer science, specifically security system design.",
            "difficulty": "medium",
            "reasoning": "## Reasoning:\n\nThis question tackles the practical application of truth tables in computer science, particularly in designing a security system with specific logic. Here's a step-by-step breakdown:\n\n1. **Understanding the Problem:** We have a vault with three sensors (A, B, C) and a logical condition determining when the vault unlocks (U). The goal is to analyze this condition using a truth table.\n\n2. **Building the Truth Table:**\n\n   | A | B | C | B XOR C | A AND (B XOR C) | (NOT A) | (NOT A) AND B AND C | U | \n   |---|---|---|---|---|---|---|---| \n   | T | T | T | F | F | F | F | F |\n   | T | T | F | T | T | F | F | T |\n   | T | F | T | T | T | F | F | T |\n   | T | F | F | F | F | F | F | F |\n   | F | T | T | F | F | T | T | T |\n   | F | T | F | T | F | T | F | F |\n   | F | F | T | T | F | T | F | F |\n   | F | F | F | F | F | T | F | F |\n\n   * We list all possible combinations of truth values for A, B, and C.\n   * We break down the complex statement into smaller parts (B XOR C, A AND (B XOR C), etc.) and calculate their truth values based on A, B, and C.\n   * Finally, we combine the truth values of the smaller parts according to the main statement to find the truth value of U for each scenario.\n\n3. **Analyzing the Truth Table:**\n\n   * **Scenarios where the vault unlocks (U is TRUE):** We have three such scenarios in our truth table (rows 2, 3, and 5).\n   * **Sensor combinations leading to unlocking:**\n      * A = True, B = True, C = False\n      * A = True, B = False, C = True\n      * A = False, B = True, C = True\n\n**Therefore, the vault unlocks under three specific sensor combinations, highlighting the practical use of truth tables in designing secure systems.**",
            "options": [
                "1",
                "2",
                "3",
                "4"
            ],
            "correct_option": "C"
        },
        {
            "question": "Imagine you are designing a security system with two sensors: a motion detector (M) and a window sensor (W).  The alarm (A) should trigger if either the motion detector is activated AND the window is NOT open, OR if the window is open AND the motion detector is NOT activated.  \n\n1. **Write a logical statement representing the conditions under which the alarm will trigger.**\n2. **Apply De Morgan's Law to express this statement in a different but logically equivalent form.**\n3. **Construct a truth table for both the original statement and the simplified statement derived using De Morgan's Law.**",
            "difficulty": "medium",
            "reasoning": "## Reasoning:\n\n**1. Original Logical Statement:**\n\nThe alarm (A) triggers under these conditions:\n* Motion detected AND window NOT open:  M \u2227 \u00acW\n* OR\n* Window open AND motion NOT detected: W \u2227 \u00acM\n\nCombining these, we get the complete statement: **(M \u2227 \u00acW) \u2228 (W \u2227 \u00acM)**\n\n**2. Applying De Morgan's Law:**\n\nDe Morgan's Law states:  \u00ac(p \u2227 q) = (\u00acp \u2228 \u00acq) and  \u00ac(p \u2228 q) = (\u00acp \u2227 \u00acq)\n\nWe can apply it to our statement by focusing on the inner parts and negating the whole expression:\n\n* **Original:** (M \u2227 \u00acW) \u2228 (W \u2227 \u00acM)\n* **Apply negation:** \u00ac[(M \u2227 \u00acW) \u2228 (W \u2227 \u00acM)] \n* **De Morgan's Law (distribute negation):** \u00ac(M \u2227 \u00acW) \u2227 \u00ac(W \u2227 \u00acM)\n* **De Morgan's Law (again, for each part):** (\u00acM \u2228 W) \u2227 (\u00acW \u2228 M)\n\nTherefore, the simplified statement is: **(\u00acM \u2228 W) \u2227 (\u00acW \u2228 M)**\n\n**3. Truth Tables:**\n\nWe need to construct truth tables for both statements to verify their equivalence.\n\n**Original Statement: (M \u2227 \u00acW) \u2228 (W \u2227 \u00acM)**\n\n| M | W | \u00acW | M \u2227 \u00acW | W \u2227 \u00acM | (M \u2227 \u00acW) \u2228 (W \u2227 \u00acM) | \n|---|---|---|---|---|---| \n| T | T | F | F     | F     |        F                |\n| T | F | T | T     | F     |        T                |\n| F | T | F | F     | T     |        T                |\n| F | F | T | F     | F     |        F                |\n\n**Simplified Statement: (\u00acM \u2228 W) \u2227 (\u00acW \u2228 M)**\n\n| M | W | \u00acM | \u00acW | \u00acM \u2228 W | \u00acW \u2228 M | (\u00acM \u2228 W) \u2227 (\u00acW \u2228 M) |\n|---|---|---|---|---|---|---| \n| T | T | F | F | T     | T     |         T               |\n| T | F | F | T | F     | T     |         F               |\n| F | T | T | F | T     | F     |         F               |\n| F | F | T | T | T     | T     |         T               |\n\n**Comparison:**  As you can see, the final columns of both truth tables are identical, proving that the original statement and the simplified statement derived using De Morgan's Law are logically equivalent.",
            "options": [
                "M \u2227 \u00acW",
                "\u00ac(M \u2228 \u00acW)",
                "(\u00acM \u2228 W) \u2227 (\u00acW \u2228 M)",
                "(M \u2227 \u00acW) \u2228 (W \u2227 \u00acM)"
            ],
            "correct_option": "C"
        },
        {
            "question": "**Difficulty:** Medium (7/10)\n\n**Theorem:**  The distributive law states that  'P and (Q or R)' is logically equivalent to '(P and Q) or (P and R)'.\n\n**Instructions:**  Select the truth table(s) that correctly demonstrate the logical equivalence of 'P and (Q or R)' and '(P and Q) or (P and R)'.\n\n**(A)**\n| P | Q | R | Q or R | P and (Q or R) |\n|---|---|---|---|---|\n| T | T | T | T | T |\n| T | T | F | T | T |\n| T | F | T | T | T |\n| T | F | F | F | F |\n| F | T | T | T | F |\n| F | T | F | T | F |\n| F | F | T | T | F |\n| F | F | F | F | F |\n\n**(B)**\n| P | Q | R | P and Q | P and R | (P and Q) or (P and R) |\n|---|---|---|---|---|---| \n| T | T | T | T | T | T |\n| T | T | F | T | F | T |\n| T | F | T | F | T | T |\n| T | F | F | F | F | F |\n| F | T | T | F | F | F |\n| F | T | F | F | F | F |\n| F | F | T | F | F | F |\n| F | F | F | F | F | F |\n\n**(C)**\n| P | Q | R | Q and R | P or (Q and R) |\n|---|---|---|---|---|\n| T | T | T | T | T |\n| T | T | F | F | T |\n| T | F | T | F | T |\n| T | F | F | F | T |\n| F | T | T | T | T |\n| F | T | F | F | F |\n| F | F | T | F | F |\n| F | F | F | F | F |\n\n**(D)**\n| P | Q | R |  (P or Q) and R | P and (Q or R) |\n|---|---|---|---|---|\n| T | T | T | T | T |\n| T | T | F | F | T |\n| T | F | T | T | T |\n| T | F | F | F | F |\n| F | T | T | T | F |\n| F | T | F | F | F |\n| F | F | T | F | F |\n| F | F | F | F | F |",
            "difficulty": "medium",
            "reasoning": "**Correct Answer:** (B)\n\n**Explanation:**\n\n1. **Understanding the Distributive Law:** The distributive law in logic states that applying 'and' over an 'or' statement is equivalent to applying 'and' to each individual component within the 'or' statement and then combining the results with 'or'.\n\n2. **Breaking Down the Theorem:** We need to prove that 'P and (Q or R)' is equivalent to '(P and Q) or (P and R)'. This means both expressions should have the same truth values for all possible combinations of truth values for P, Q, and R.\n\n3. **Analyzing the Truth Tables:**\n    - **Table (A):**  This table calculates 'P and (Q or R)' but doesn't calculate '(P and Q) or (P and R)', so we can't compare.\n    - **Table (B):** This table correctly calculates both 'P and (Q or R)' and '(P and Q) or (P and R)'. Notice that the final columns for both expressions are identical, proving the equivalence.\n    - **Table (C):** This table incorrectly calculates 'P or (Q and R)' instead of '(P and Q) or (P and R)'.\n    - **Table (D):** This table incorrectly calculates '(P or Q) and R' instead of '(P and Q) or (P and R)'.\n\n**Therefore, only Table (B) accurately demonstrates the logical equivalence stated by the distributive law.**",
            "options": [
                "A",
                "B",
                "C",
                "D"
            ],
            "correct_option": "B"
        },
        {
            "question": "Imagine a logic puzzle that states: 'All ravens are black.  Therefore, if something is not black, it is not a raven.'  However, the puzzle continues: 'There exists a magical island where some ravens are white.' Which of the following accurately reflects the limitations of using a standard truth table to analyze the complete logic of this puzzle?",
            "difficulty": "hard",
            "reasoning": "This question dives into a tricky aspect of formal logic vs. real-world application. Here's the breakdown:\n\n* **The First Part:** The statement 'All ravens are black. Therefore, if something is not black, it is not a raven' is logically sound. A truth table would confirm this, showing the contrapositive relationship.\n* **The Second Part:** The introduction of a 'magical island' where the initial premise is broken throws a wrench into things. Standard truth tables deal with absolute truth within a given system. They struggle to incorporate exceptions or context-dependent changes.\n\n**Why the Correct Answer is Correct:**\n\nThe correct answer would highlight that while a truth table could verify the initial deduction, it cannot adequately represent the puzzle's complete logic with the added island scenario.  This is because truth tables lack the nuance to handle exceptions and contextual shifts without significant modification.\n\n**Incorrect Options Would Likely Include:**\n\n* Claims that the entire puzzle can be easily modeled (it can't without modifications to the system the truth table represents).\n* Statements that truth tables are entirely useless here (they're useful for the first part). \n* Options suggesting the puzzle is illogical (it's logically sound but highlights the limitations of formal logic on its own). \n",
            "options": [
                "Truth tables cannot represent the puzzle's full logic due to the island's exception.",
                "Truth tables can fully analyze the logic of the puzzle, including the island scenario.",
                "The puzzle is illogical because it contradicts the initial premise.",
                "Truth tables are ineffective in analyzing any aspect of the puzzle's logic."
            ],
            "correct_option": "A"
        },
        {
            "question": "Consider the following complex logical expression:\n\n(P \u2194 \u00acQ) \u2192 ((\u00acP \u2227 R) \u2228 (Q XOR \u00acR))\n\nImagine you are constructing a truth table for this expression.  What is the truth value of the entire expression in the row where P is false, Q is true, and R is false? Explain your reasoning by breaking down the evaluation of the expression step-by-step.",
            "difficulty": "hard",
            "reasoning": "Let's break down this complex logical expression step-by-step to determine its truth value when P is false (F), Q is true (T), and R is false (F).\n\n1. **Substitute the values:**\n   (F \u2194 \u00acT) \u2192 ((\u00acF \u2227 F) \u2228 (T XOR \u00acF))\n\n2. **Evaluate negations (\u00ac):**\n   (F \u2194 F) \u2192 ((T \u2227 F) \u2228 (T XOR T))\n\n3. **Evaluate within parentheses, starting from the innermost:**\n   *  (T \u2227 F) = F (AND is true only when both operands are true)\n   *  (T XOR T) = F (XOR is true only when exactly one operand is true)\n   This gives us:\n   (F \u2194 F) \u2192 (F \u2228 F)\n\n4. **Continue evaluating within parentheses:**\n   * (F \u2194 F) = T (Biconditional (\u2194) is true when both operands have the same truth value)\n   * (F \u2228 F) = F (OR is false only when both operands are false)\n   This leads to:\n   T \u2192 F\n\n5. **Final Evaluation:**\n   T \u2192 F = F (An implication (\u2192) is false only when the antecedent is true and the consequent is false)\n\nTherefore, the truth value of the entire expression when P is false, Q is true, and R is false is **False**.",
            "options": [
                "True",
                "False",
                "Unknown",
                "Undefined"
            ],
            "correct_option": "B"
        },
        {
            "question": "Imagine a world where cats rule a utopia on the dark side of the moon. In this world, the following statement holds true: 'If a cat wears a hat, then it can speak telepathically to goldfish.'  Construct a complete truth table for this statement, considering all possible combinations of a cat wearing a hat and its ability to speak telepathically to goldfish.  Explain how the truth values in your table demonstrate the nature of conditional statements, particularly when the antecedent (the 'if' part) might be considered unusual or even absurd in our everyday understanding of reality.",
            "difficulty": "hard",
            "reasoning": "This question delves into the core of conditional statements (implications) and how their truth values are determined. It uses an intentionally fantastical premise to highlight that the truth of a conditional statement in logic isn't tied to real-world facts or plausibility.\n\nHere's how we break down the solution:\n\n**1. Define the Propositions:**\n   *  **P:** A cat wears a hat.\n   *  **Q:** A cat can speak telepathically to goldfish.\n\n**2. Create the Truth Table Structure:**\n\n| P | Q | P \u2192 Q |\n|---|---|-------|\n| T | T |       |\n| T | F |       |\n| F | T |       |\n| F | F |       |\n\n**3. Evaluate the Conditional (P \u2192 Q):**\n\n* **Row 1 (T, T):** If a cat wearing a hat (T) can indeed speak telepathically to goldfish (T), the statement holds true. So, P \u2192 Q is True. \n* **Row 2 (T, F):** If a cat wearing a hat (T) *cannot* speak telepathically to goldfish (F), the original statement is broken. This makes P \u2192 Q False. \n* **Row 3 (F, T):** This is where it gets interesting. The statement doesn't say *anything* about cats *without* hats.  Maybe they can speak to goldfish, maybe they can't. Since the statement doesn't contradict this possibility, P \u2192 Q is True. This aligns with the idea that a conditional is only False when the antecedent is True, and the consequent is False. \n* **Row 4 (F, F):** Similar to Row 3, the statement doesn't cover cats without hats. Since it doesn't contradict the possibility of a hatless cat being unable to speak to goldfish,  P \u2192 Q is True.\n\n**4. Complete Truth Table:**\n\n| P | Q | P \u2192 Q |\n|---|---|-------|\n| T | T |   T   |\n| T | F |   F   |\n| F | T |   T   |\n| F | F |   T   |\n\n**Key Takeaway:** This question reinforces that in logic, we're concerned with the *structure* of arguments and the relationships between truth values, not the literal content of the statements. Even if the scenario is outlandish, the rules of logic hold.",
            "options": [
                "False",
                "True",
                "4",
                "2"
            ],
            "correct_option": "C"
        },
        {
            "question": "In a specific computer network protocol, a packet is deemed valid if it meets the following conditions, represented by logical variables:\n\n* **P:** The packet header contains a valid source address.\n* **Q:** The packet length does not exceed the maximum allowed.\n* **R:** The checksum verification for data integrity is successful.\n\nThe protocol's validity check can be expressed with the following logical statement: (P XOR Q) \u2192 (R \u2227 P).  Which of the following statements about this protocol's packet validation logic is TRUE?\n\nA) A packet with an invalid source address (P = False) will always be deemed invalid, regardless of other factors.\nB) A packet exceeding the maximum allowed length (Q = False) will always be deemed invalid, regardless of other factors.\nC) If the checksum verification fails (R = False), the packet is always deemed invalid.\nD) This protocol allows for a scenario where a packet with both a valid source address and a successful checksum verification (P = True, R = True) can still be deemed invalid.",
            "difficulty": "hard",
            "reasoning": "Let's break down the question and the provided logical statement to arrive at the correct answer. \n\n**Understanding the Statement:**\n\nThe statement (P XOR Q) \u2192 (R \u2227 P) governs whether a packet is valid.  Here's a breakdown:\n\n* **XOR (Exclusive OR):**  P XOR Q is True if and only if *exactly one* of P or Q is True.\n* **\u2192 (Implication):**  A statement of the form A \u2192 B is only False when A is True and B is False. Otherwise, it's True.\n* **\u2227 (AND):** R \u2227 P is True if and only if *both* R and P are True.\n\n**Analyzing the Options:**\n\n* **A)  Incorrect.** If P = False and Q = True, then (P XOR Q) is True. If R is also True, then (R \u2227 P) is False.  This makes the entire statement False (True \u2192 False), meaning the packet *could* be valid.\n* **B) Incorrect.**  Similar to option A, if Q = False and P = True,  the packet *could* be valid depending on the value of R.\n* **C) Correct.** If R = False, then (R \u2227 P) *must* be False, regardless of the value of P. This makes the entire statement False whenever R is False because the right side of the implication cannot be True.\n* **D) Incorrect.** If P = True and R = True, then (R \u2227 P) is True. The implication (P XOR Q) \u2192 (R \u2227 P) will always be True in this case, regardless of the value of Q, meaning the packet will be valid.\n\n**Key Takeaway:**\n\nThis question is tricky because it blends a complex logical statement with a real-world scenario. Students need to carefully dissect the meaning of the XOR and implication operators to understand the conditions under which a packet would be deemed invalid. Option C is the only scenario that *always* leads to an invalid packet.",
            "options": [
                "A",
                "B",
                "C",
                "D"
            ],
            "correct_option": "C"
        },
        {
            "question": "Given the following propositions:\n\n* P: The cat is sleeping.\n* Q: The dog is barking.\n* R: The bird is singing.\n\nConstruct a truth table for the compound proposition:  **(P \u2227 Q) \u2228 (~P \u2227 R)**, clearly indicating the truth value for each possible combination of truth values for P, Q, and R.",
            "difficulty": "hard",
            "reasoning": "This question focuses on constructing a truth table for a compound proposition involving three simple propositions (P, Q, and R).  Here's a step-by-step breakdown of the solution:\n\n**1. Identify the Basic Propositions:**\n   We have three: P, Q, and R.\n\n**2. Create the Truth Table Structure:**\n   With three propositions, there will be 2\u00b3 = 8 possible combinations of truth values. Our truth table will have 8 rows and columns for P, Q, R, (P \u2227 Q), (~P \u2227 R), and finally (P \u2227 Q) \u2228 (~P \u2227 R).\n\n**3. Fill in Truth Values for P, Q, and R:**\n\n| P | Q | R | (P \u2227 Q) | (~P \u2227 R) | (P \u2227 Q) \u2228 (~P \u2227 R) | \n|---|---|---|---|---|---| \n| T | T | T |       |         |                     | \n| T | T | F |       |         |                     | \n| T | F | T |       |         |                     | \n| T | F | F |       |         |                     | \n| F | T | T |       |         |                     | \n| F | T | F |       |         |                     | \n| F | F | T |       |         |                     | \n| F | F | F |       |         |                     | \n\n**4.  Calculate (P \u2227 Q):**\n   This is true only when *both* P and Q are true.\n\n| P | Q | R | (P \u2227 Q) | (~P \u2227 R) | (P \u2227 Q) \u2228 (~P \u2227 R) | \n|---|---|---|---|---|---| \n| T | T | T |    T    |         |                     | \n| T | T | F |    T    |         |                     | \n| T | F | T |    F    |         |                     | \n| T | F | F |    F    |         |                     | \n| F | T | T |    F    |         |                     | \n| F | T | F |    F    |         |                     | \n| F | F | T |    F    |         |                     | \n| F | F | F |    F    |         |                     | \n\n**5. Calculate (~P \u2227 R):** \n   This is true only when P is false and R is true. \n\n| P | Q | R | (P \u2227 Q) | (~P \u2227 R) | (P \u2227 Q) \u2228 (~P \u2227 R) | \n|---|---|---|---|---|---| \n| T | T | T |    T    |    F     |                     | \n| T | T | F |    T    |    F     |                     | \n| T | F | T |    F    |    F     |                     | \n| T | F | F |    F    |    F     |                     | \n| F | T | T |    F    |    T     |                     | \n| F | T | F |    F    |    F     |                     | \n| F | F | T |    F    |    T     |                     | \n| F | F | F |    F    |    F     |                     | \n\n**6. Calculate (P \u2227 Q) \u2228 (~P \u2227 R):**\n    This is true if either (P \u2227 Q) is true or (~P \u2227 R) is true, or if both are true.\n\n| P | Q | R | (P \u2227 Q) | (~P \u2227 R) | (P \u2227 Q) \u2228 (~P \u2227 R) | \n|---|---|---|---|---|---| \n| T | T | T |    T    |    F     |       T             | \n| T | T | F |    T    |    F     |       T             | \n| T | F | T |    F    |    F     |       F             | \n| T | F | F |    F    |    F     |       F             | \n| F | T | T |    F    |    T     |       T             | \n| F | T | F |    F    |    F     |       F             | \n| F | F | T |    F    |    T     |       T             | \n| F | F | F |    F    |    F     |       F             | \n\n**Therefore, the completed truth table accurately represents the truth value of the compound proposition for all possible truth value combinations of P, Q, and R.**",
            "options": [
                "8",
                "6",
                "2",
                "4"
            ],
            "correct_option": "A"
        }
    ],
    "title": "Logical Reasoning",
    "topic": "Logical Reasoning - Truth Tables",
    "exam_id": 17,
    "order": 4
}